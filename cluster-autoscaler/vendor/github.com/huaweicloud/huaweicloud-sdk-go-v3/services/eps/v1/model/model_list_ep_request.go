/*
 * EPS
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */

package model

import (
	"encoding/json"
	"errors"
	"github.com/huaweicloud/huaweicloud-sdk-go-v3/core/converter"
	"strings"
)

// Request Object
type ListEpRequest struct {
	Id      *string               `json:"id,omitempty"`
	Name    *string               `json:"name,omitempty"`
	Status  *int32                `json:"status,omitempty"`
	Limit   *int32                `json:"limit,omitempty"`
	Offset  int32                 `json:"offset"`
	SortKey *ListEpRequestSortKey `json:"sort_key,omitempty"`
	SortDir *ListEpRequestSortDir `json:"sort_dir,omitempty"`
}

func (o ListEpRequest) String() string {
	data, _ := json.Marshal(o)
	return strings.Join([]string{"ListEpRequest", string(data)}, " ")
}

type ListEpRequestSortKey struct {
	value string
}

type ListEpRequestSortKeyEnum struct {
	CREATED_AT ListEpRequestSortKey
	UPDATED_AT ListEpRequestSortKey
}

func GetListEpRequestSortKeyEnum() ListEpRequestSortKeyEnum {
	return ListEpRequestSortKeyEnum{
		CREATED_AT: ListEpRequestSortKey{
			value: "created_at",
		},
		UPDATED_AT: ListEpRequestSortKey{
			value: "updated_at",
		},
	}
}

func (c ListEpRequestSortKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *ListEpRequestSortKey) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}

type ListEpRequestSortDir struct {
	value string
}

type ListEpRequestSortDirEnum struct {
	DESC ListEpRequestSortDir
	ASC  ListEpRequestSortDir
}

func GetListEpRequestSortDirEnum() ListEpRequestSortDirEnum {
	return ListEpRequestSortDirEnum{
		DESC: ListEpRequestSortDir{
			value: "desc",
		},
		ASC: ListEpRequestSortDir{
			value: "asc",
		},
	}
}

func (c ListEpRequestSortDir) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *ListEpRequestSortDir) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}
